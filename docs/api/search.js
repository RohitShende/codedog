window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "codedog", "modulename": "codedog", "kind": "module", "doc": "<p>Review your Github/Gitlab PR with ChatGPT</p>\n\n<h2 id=\"what-is-codedog\">What is codedog?</h2>\n\n<p>Codedog is a code review automation tool benefit the power of LLM (Large Language Model) to help developers\nreview code faster and more accurately.</p>\n\n<p>Codedog is based on OpenAI API and Langchain.</p>\n\n<h2 id=\"quickstart\">Quickstart</h2>\n\n<p>As a example, we will use codedog to review a pull request on Github.</p>\n\n<ol start=\"0\">\n<li>Install codedog</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>codedog\n</code></pre>\n</div>\n\n<p>codedog currently only supports python 3.10.</p>\n\n<ol>\n<li>Get a github pull request</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">github</span> <span class=\"kn\">import</span> <span class=\"n\">Github</span>\n\n<span class=\"n\">github_token</span><span class=\"o\">=</span><span class=\"s2\">&quot;YOUR GITHUB TOKEN&quot;</span>\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;codedog-ai/codedog&quot;</span>\n<span class=\"n\">pull_request_number</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n\n<span class=\"n\">github</span> <span class=\"o\">=</span> <span class=\"n\">Github</span><span class=\"p\">(</span><span class=\"n\">github_token</span><span class=\"p\">)</span>\n<span class=\"n\">retriever</span> <span class=\"o\">=</span> <span class=\"n\">GithubRetriever</span><span class=\"p\">(</span><span class=\"n\">github</span><span class=\"p\">,</span> <span class=\"n\">repository</span><span class=\"p\">,</span> <span class=\"n\">pull_requeest_number</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<ol start=\"2\">\n<li>Summarize the pull request</li>\n</ol>\n\n<p>Since <code>PRSummaryChain</code> uses langchain's output parser, we suggest to use GPT-4 to improve formatting accuracy.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">codedog.chains</span> <span class=\"kn\">import</span> <span class=\"n\">PRSummaryChain</span>\n\n<span class=\"n\">openai_api_key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;YOUR OPENAI API KEY WITH GPT4&quot;</span>\n\n<span class=\"c1\"># PR Summary uses output parser</span>\n<span class=\"n\">llm35</span> <span class=\"o\">=</span> <span class=\"n\">ChatOpenAI</span><span class=\"p\">(</span><span class=\"n\">openai_api_key</span><span class=\"o\">=</span><span class=\"n\">openai_api_key</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;gpt-3.5-turbo&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">llm4</span> <span class=\"o\">=</span> <span class=\"n\">ChatOpenAI</span><span class=\"p\">(</span><span class=\"n\">openai_api_key</span><span class=\"o\">=</span><span class=\"n\">openai_api_key</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;gpt-4&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">summary_chain</span> <span class=\"o\">=</span> <span class=\"n\">PRSummaryChain</span><span class=\"o\">.</span><span class=\"n\">from_llm</span><span class=\"p\">(</span><span class=\"n\">code_summary_llm</span><span class=\"o\">=</span><span class=\"n\">llm35</span><span class=\"p\">,</span> <span class=\"n\">pr_summary_llm</span><span class=\"o\">=</span><span class=\"n\">llm4</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">summary</span> <span class=\"o\">=</span> <span class=\"n\">summary_chain</span><span class=\"p\">({</span><span class=\"s2\">&quot;pull_request&quot;</span><span class=\"p\">:</span> <span class=\"n\">retriever</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"p\">},</span> <span class=\"n\">include_run_info</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">summary</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<ol start=\"3\">\n<li>Review each code file changes in the pull request</li>\n</ol>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">review_chain</span> <span class=\"o\">=</span> <span class=\"n\">CodeReviewChain</span><span class=\"o\">.</span><span class=\"n\">from_llm</span><span class=\"p\">(</span><span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">llm35</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">reviews</span> <span class=\"o\">=</span> <span class=\"n\">review_chain</span><span class=\"p\">({</span><span class=\"s2\">&quot;pull_request&quot;</span><span class=\"p\">:</span> <span class=\"n\">retriever</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"p\">},</span> <span class=\"n\">include_run_info</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">reviews</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<ol start=\"4\">\n<li>Format review result</li>\n</ol>\n\n<p>Format review result to a markdown report.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">codedog.actors.reporters.pull_request</span> <span class=\"kn\">import</span> <span class=\"n\">PullRequestReporter</span>\n\n<span class=\"n\">reporter</span> <span class=\"o\">=</span> <span class=\"n\">PullRequestReporter</span><span class=\"p\">(</span>\n    <span class=\"n\">pr_summary</span><span class=\"o\">=</span><span class=\"n\">summary</span><span class=\"p\">[</span><span class=\"s2\">&quot;pr_summary&quot;</span><span class=\"p\">],</span>\n    <span class=\"n\">code_summaries</span><span class=\"o\">=</span><span class=\"n\">summary</span><span class=\"p\">[</span><span class=\"s2\">&quot;code_summaries&quot;</span><span class=\"p\">],</span>\n    <span class=\"n\">pull_request</span><span class=\"o\">=</span><span class=\"n\">retriever</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"p\">,</span>\n    <span class=\"n\">code_reviews</span><span class=\"o\">=</span><span class=\"n\">reviews</span><span class=\"p\">[</span><span class=\"s2\">&quot;code_reviews&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">md_report</span> <span class=\"o\">=</span> <span class=\"n\">reporter</span><span class=\"o\">.</span><span class=\"n\">report</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">md_report</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"deployment\">Deployment</h2>\n\n<p>We have a simple server demo to deploy codedog as a service with fastapi and handle Github webhook.\nBasicly you can also use it with workflow or Github Application.</p>\n\n<p>see <code>examples/server.py</code></p>\n\n<p>Note that codedog don't have fastapi and unicorn as dependency, you need to install them manually.</p>\n\n<h2 id=\"configuration\">Configuration</h2>\n\n<p>Codedog currently load config from environment variables.</p>\n\n<p>settings:</p>\n\n<table>\n<thead>\n<tr>\n  <th>Config Name</th>\n  <th>Required</th>\n  <th>Default</th>\n  <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>OPENAI_API_KEY</td>\n  <td>No</td>\n  <td></td>\n  <td>Api Key for calling openai gpt api</td>\n</tr>\n<tr>\n  <td>AZURE_OPENAI</td>\n  <td>No</td>\n  <td></td>\n  <td>Use azure openai if not blank</td>\n</tr>\n<tr>\n  <td>AZURE_OPENAI_API_KEY</td>\n  <td>No</td>\n  <td></td>\n  <td>Azure openai api key</td>\n</tr>\n<tr>\n  <td>AZURE_OPENAI_API_BASE</td>\n  <td>No</td>\n  <td></td>\n  <td>Azure openai api base</td>\n</tr>\n<tr>\n  <td>AZURE_OPENAI_DEPLOYMENT_ID</td>\n  <td>No</td>\n  <td></td>\n  <td>Azure openai deployment id for gpt 3.5</td>\n</tr>\n<tr>\n  <td>AZURE_OPENAI_GPT4_DEPLOYMENT_ID</td>\n  <td>No</td>\n  <td></td>\n  <td>Azure openai deployment id for gpt 4</td>\n</tr>\n</tbody>\n</table>\n"}, {"fullname": "codedog.actors", "modulename": "codedog.actors", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.base", "modulename": "codedog.actors.base", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.base.Actor", "modulename": "codedog.actors.base", "qualname": "Actor", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters", "modulename": "codedog.actors.reporters", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters.base", "modulename": "codedog.actors.reporters.base", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters.base.Reporter", "modulename": "codedog.actors.reporters.base", "qualname": "Reporter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "codedog.actors.base.Actor, abc.ABC"}, {"fullname": "codedog.actors.reporters.base.Reporter.report", "modulename": "codedog.actors.reporters.base", "qualname": "Reporter.report", "kind": "function", "doc": "<p>Generate report content text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.actors.reporters.code_review", "modulename": "codedog.actors.reporters.code_review", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters.code_review.CodeReviewMarkdownReporter", "modulename": "codedog.actors.reporters.code_review", "qualname": "CodeReviewMarkdownReporter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "codedog.actors.reporters.base.Reporter, codedog.localization.Localization"}, {"fullname": "codedog.actors.reporters.code_review.CodeReviewMarkdownReporter.__init__", "modulename": "codedog.actors.reporters.code_review", "qualname": "CodeReviewMarkdownReporter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">code_reviews</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">code_review</span><span class=\"o\">.</span><span class=\"n\">CodeReview</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">&#39;en&#39;</span></span>)</span>"}, {"fullname": "codedog.actors.reporters.code_review.CodeReviewMarkdownReporter.report", "modulename": "codedog.actors.reporters.code_review", "qualname": "CodeReviewMarkdownReporter.report", "kind": "function", "doc": "<p>Generate report content text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.actors.reporters.pr_summary", "modulename": "codedog.actors.reporters.pr_summary", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters.pr_summary.PRSummaryMarkdownReporter", "modulename": "codedog.actors.reporters.pr_summary", "qualname": "PRSummaryMarkdownReporter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "codedog.actors.reporters.base.Reporter, codedog.localization.Localization"}, {"fullname": "codedog.actors.reporters.pr_summary.PRSummaryMarkdownReporter.__init__", "modulename": "codedog.actors.reporters.pr_summary", "qualname": "PRSummaryMarkdownReporter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pr_summary</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pr_summary</span><span class=\"o\">.</span><span class=\"n\">PRSummary</span>,</span><span class=\"param\">\t<span class=\"n\">code_summaries</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_summary</span><span class=\"o\">.</span><span class=\"n\">ChangeSummary</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">pull_request</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"o\">.</span><span class=\"n\">PullRequest</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">&#39;en&#39;</span></span>)</span>"}, {"fullname": "codedog.actors.reporters.pr_summary.PRSummaryMarkdownReporter.pr_processor", "modulename": "codedog.actors.reporters.pr_summary", "qualname": "PRSummaryMarkdownReporter.pr_processor", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;codedog.processors.pull_request_processor.PullRequestProcessor object&gt;"}, {"fullname": "codedog.actors.reporters.pr_summary.PRSummaryMarkdownReporter.report", "modulename": "codedog.actors.reporters.pr_summary", "qualname": "PRSummaryMarkdownReporter.report", "kind": "function", "doc": "<p>Generate report content text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.actors.reporters.pull_request", "modulename": "codedog.actors.reporters.pull_request", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.actors.reporters.pull_request.PullRequestReporter", "modulename": "codedog.actors.reporters.pull_request", "qualname": "PullRequestReporter", "kind": "class", "doc": "<p>Helper class that provides a standard way to create an ABC using\ninheritance.</p>\n", "bases": "codedog.actors.reporters.base.Reporter, codedog.localization.Localization"}, {"fullname": "codedog.actors.reporters.pull_request.PullRequestReporter.__init__", "modulename": "codedog.actors.reporters.pull_request", "qualname": "PullRequestReporter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">pr_summary</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pr_summary</span><span class=\"o\">.</span><span class=\"n\">PRSummary</span>,</span><span class=\"param\">\t<span class=\"n\">code_summaries</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_summary</span><span class=\"o\">.</span><span class=\"n\">ChangeSummary</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">pull_request</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"o\">.</span><span class=\"n\">PullRequest</span>,</span><span class=\"param\">\t<span class=\"n\">code_reviews</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">code_review</span><span class=\"o\">.</span><span class=\"n\">CodeReview</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">telemetry</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">&#39;en&#39;</span></span>)</span>"}, {"fullname": "codedog.actors.reporters.pull_request.PullRequestReporter.report", "modulename": "codedog.actors.reporters.pull_request", "qualname": "PullRequestReporter.report", "kind": "function", "doc": "<p>Generate report content text.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.chains", "modulename": "codedog.chains", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.chains.PRSummaryChain", "modulename": "codedog.chains", "qualname": "PRSummaryChain", "kind": "class", "doc": "<p>Summarize a pull request.</p>\n\n<p>Inputs are:</p>\n\n<ul>\n<li>pull_request(PullRequest): a pull request object</li>\n</ul>\n\n<p>Outputs are:</p>\n\n<ul>\n<li>pr_summary(PRSummary): summary of pull request.</li>\n<li>code_summaries(Dict[str, str]): changed code file summarizations, key is file path.</li>\n</ul>\n", "bases": "langchain.load.serializable.Serializable, langchain.schema.runnable.Runnable[typing.Dict[str, typing.Any], typing.Dict[str, typing.Any]], abc.ABC"}, {"fullname": "codedog.chains.PRSummaryChain.code_summary_chain", "modulename": "codedog.chains", "qualname": "PRSummaryChain.code_summary_chain", "kind": "variable", "doc": "<p>Chain to use to summarize code change.</p>\n", "annotation": ": langchain.chains.llm.LLMChain"}, {"fullname": "codedog.chains.PRSummaryChain.pr_summary_chain", "modulename": "codedog.chains", "qualname": "PRSummaryChain.pr_summary_chain", "kind": "variable", "doc": "<p>Chain to use to summarize PR.</p>\n", "annotation": ": langchain.chains.llm.LLMChain"}, {"fullname": "codedog.chains.PRSummaryChain.parser", "modulename": "codedog.chains", "qualname": "PRSummaryChain.parser", "kind": "variable", "doc": "<p>Parse pr summarized result to PRSummary object.</p>\n", "annotation": ": langchain.schema.output_parser.BaseOutputParser"}, {"fullname": "codedog.chains.PRSummaryChain.processor", "modulename": "codedog.chains", "qualname": "PRSummaryChain.processor", "kind": "variable", "doc": "<p>PR data process.</p>\n", "annotation": ": codedog.processors.pull_request_processor.PullRequestProcessor"}, {"fullname": "codedog.chains.PRSummaryChain.input_keys", "modulename": "codedog.chains", "qualname": "PRSummaryChain.input_keys", "kind": "variable", "doc": "<p>Will be whatever keys the prompt expects.</p>\n\n<p>:meta private:</p>\n", "annotation": ": List[str]"}, {"fullname": "codedog.chains.PRSummaryChain.output_keys", "modulename": "codedog.chains", "qualname": "PRSummaryChain.output_keys", "kind": "variable", "doc": "<p>Will always return text key.</p>\n\n<p>:meta private:</p>\n", "annotation": ": List[str]"}, {"fullname": "codedog.chains.PRSummaryChain.review", "modulename": "codedog.chains", "qualname": "PRSummaryChain.review", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">_run_manager</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.chains.PRSummaryChain.areview", "modulename": "codedog.chains", "qualname": "PRSummaryChain.areview", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">_run_manager</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, {"fullname": "codedog.chains.PRSummaryChain.from_llm", "modulename": "codedog.chains", "qualname": "PRSummaryChain.from_llm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">code_summary_llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">pr_summary_llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">code_summary_prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;language&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;content&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Act as a Code Reviewer Assistant. I will give a code diff content.</span><span class=\"se\">\\n</span><span class=\"s2\">And I want you to briefly summarize the content of the diff to helper reviewers understand what happened in this file</span><span class=\"se\">\\n</span><span class=\"s2\">faster and more convienently.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Your summary must be totaly objective and contains no opinions or suggestions.</span><span class=\"se\">\\n</span><span class=\"s2\">For example: ```This diff contains change in functions `create_database`,`delete_database`,</span><span class=\"se\">\\n</span><span class=\"s2\">it add a parameter `force` to these functions.</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Here&#39;s the diff of file </span><span class=\"si\">{name}</span><span class=\"s2\">:</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"si\">{language}</span><span class=\"se\">\\n</span><span class=\"si\">{content}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">pr_summary_prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;metadata&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;change_files&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;code_summaries&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;format_instructions&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;The output should be formatted as a JSON instance that conforms to the JSON schema below.</span><span class=\"se\">\\n\\n</span><span class=\"s1\">As an example, for the schema {&quot;properties&quot;: {&quot;foo&quot;: {&quot;title&quot;: &quot;Foo&quot;, &quot;description&quot;: &quot;a list of strings&quot;, &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: {&quot;type&quot;: &quot;string&quot;}}}, &quot;required&quot;: [&quot;foo&quot;]}}</span><span class=\"se\">\\n</span><span class=\"s1\">the object {&quot;foo&quot;: [&quot;bar&quot;, &quot;baz&quot;]} is a well-formatted instance of the schema. The object {&quot;properties&quot;: {&quot;foo&quot;: [&quot;bar&quot;, &quot;baz&quot;]}} is not well-formatted.</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Here is the output schema:</span><span class=\"se\">\\n</span><span class=\"s1\">```</span><span class=\"se\">\\n</span><span class=\"s1\">{&quot;properties&quot;: {&quot;overview&quot;: {&quot;title&quot;: &quot;Overview&quot;, &quot;default&quot;: &quot;&quot;, &quot;type&quot;: &quot;string&quot;}, &quot;pr_type&quot;: {&quot;default&quot;: &quot;unknown&quot;, &quot;allOf&quot;: [{&quot;$ref&quot;: &quot;#/definitions/PRType&quot;}]}, &quot;major_files&quot;: {&quot;title&quot;: &quot;Major Files&quot;, &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: {&quot;type&quot;: &quot;string&quot;}}}, &quot;definitions&quot;: {&quot;PRType&quot;: {&quot;title&quot;: &quot;PRType&quot;, &quot;description&quot;: &quot;Pull request type: feature, fix, refactor, perf, test, doc, ci, style, chore.&quot;, &quot;enum&quot;: [&quot;feature&quot;, &quot;fix&quot;, &quot;refactor&quot;, &quot;perf&quot;, &quot;test&quot;, &quot;doc&quot;, &quot;ci&quot;, &quot;style&quot;, &quot;chore&quot;, &quot;unknown&quot;], &quot;type&quot;: &quot;string&quot;}}}</span><span class=\"se\">\\n</span><span class=\"s1\">```&#39;</span><span class=\"p\">},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Act as a Code Reviewer Assistant. I want you to provide some information aboud below Pull Request(PR)</span><span class=\"se\">\\n</span><span class=\"s2\">to help reviewers understand it better and review it faster.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">The items I want you to provide are:</span><span class=\"se\">\\n</span><span class=\"s2\">- Describe the changes of this PR and it&#39;s objective.</span><span class=\"se\">\\n</span><span class=\"s2\">- Categorize this PR into one of the following types: Feature,Fix,Refactor,Perf,Doc,Test,Ci,Style,Housekeeping</span><span class=\"se\">\\n</span><span class=\"s2\">- If it&#39;s a feature/refactor PR. List the important change files which you believe</span><span class=\"se\">\\n</span><span class=\"s2\">    contains the major logical changes of this PR.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Below is informations about this PR I can provide to you:</span><span class=\"se\">\\n</span><span class=\"s2\">PR Metadata:</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{metadata}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">Change Files (with status):</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{change_files}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">Code change summaries (if this pr contains no code files, this will be empty):</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{code_summaries}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n\\n</span><span class=\"si\">{format_instructions}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">chains</span><span class=\"o\">.</span><span class=\"n\">pr_summary</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">PRSummaryChain</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.chains.CodeReviewChain", "modulename": "codedog.chains", "qualname": "CodeReviewChain", "kind": "class", "doc": "<p>Abstract base class for creating structured sequences of calls to components.</p>\n\n<p>Chains should be used to encode a sequence of calls to components like\nmodels, document retrievers, other chains, etc., and provide a simple interface\nto this sequence.</p>\n\n<p>The Chain interface makes it easy to create apps that are:\n    - Stateful: add Memory to any Chain to give it state,\n    - Observable: pass Callbacks to a Chain to execute additional functionality,\n        like logging, outside the main sequence of component calls,\n    - Composable: the Chain API is flexible enough that it is easy to combine\n        Chains with other components, including other Chains.</p>\n\n<p>The main methods exposed by chains are:\n    - <code>__call__</code>: Chains are callable. The <code>__call__</code> method is the primary way to\n        execute a Chain. This takes inputs as a dictionary and returns a\n        dictionary output.\n    - <code>run</code>: A convenience method that takes inputs as args/kwargs and returns the\n        output as a string or object. This method can only be used for a subset of\n        chains and cannot return as rich of an output as <code>__call__</code>.</p>\n", "bases": "langchain.load.serializable.Serializable, langchain.schema.runnable.Runnable[typing.Dict[str, typing.Any], typing.Dict[str, typing.Any]], abc.ABC"}, {"fullname": "codedog.chains.CodeReviewChain.chain", "modulename": "codedog.chains", "qualname": "CodeReviewChain.chain", "kind": "variable", "doc": "<p>Chain to use to review code change.</p>\n", "annotation": ": langchain.chains.llm.LLMChain"}, {"fullname": "codedog.chains.CodeReviewChain.processor", "modulename": "codedog.chains", "qualname": "CodeReviewChain.processor", "kind": "variable", "doc": "<p>PR data process.</p>\n", "annotation": ": codedog.processors.pull_request_processor.PullRequestProcessor"}, {"fullname": "codedog.chains.CodeReviewChain.input_keys", "modulename": "codedog.chains", "qualname": "CodeReviewChain.input_keys", "kind": "variable", "doc": "<p>Will be whatever keys the prompt expects.</p>\n\n<p>:meta private:</p>\n", "annotation": ": List[str]"}, {"fullname": "codedog.chains.CodeReviewChain.output_keys", "modulename": "codedog.chains", "qualname": "CodeReviewChain.output_keys", "kind": "variable", "doc": "<p>Will always return text key.</p>\n\n<p>:meta private:</p>\n", "annotation": ": List[str]"}, {"fullname": "codedog.chains.CodeReviewChain.from_llm", "modulename": "codedog.chains", "qualname": "CodeReviewChain.from_llm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;language&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;content&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Act as a Code Reviewer Assistant. I will give a code diff content.</span><span class=\"se\">\\n</span><span class=\"s2\">And I want you to check whether the code change is correct and give some suggestions to the author.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Here&#39;s the code diff from file </span><span class=\"si\">{name}</span><span class=\"s2\">:</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"si\">{language}</span><span class=\"se\">\\n</span><span class=\"si\">{content}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">chains</span><span class=\"o\">.</span><span class=\"n\">code_review</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">CodeReviewChain</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.chains.TranslatePRSummaryChain", "modulename": "codedog.chains", "qualname": "TranslatePRSummaryChain", "kind": "class", "doc": "<p>Summarize a pull request.</p>\n\n<p>Inputs are:</p>\n\n<ul>\n<li>pull_request(PullRequest): a pull request object</li>\n</ul>\n\n<p>Outputs are:</p>\n\n<ul>\n<li>pr_summary(PRSummary): summary of pull request.</li>\n<li>code_summaries(Dict[str, str]): changed code file summarizations, key is file path.</li>\n</ul>\n", "bases": "langchain.load.serializable.Serializable, langchain.schema.runnable.Runnable[typing.Dict[str, typing.Any], typing.Dict[str, typing.Any]], abc.ABC"}, {"fullname": "codedog.chains.TranslatePRSummaryChain.language", "modulename": "codedog.chains", "qualname": "TranslatePRSummaryChain.language", "kind": "variable", "doc": "<p>The language you want to translate into.</p>\n\n<p>Note that default review result is usually in English. If language is set to english it will also call llm</p>\n", "annotation": ": str"}, {"fullname": "codedog.chains.TranslatePRSummaryChain.translate_chain", "modulename": "codedog.chains", "qualname": "TranslatePRSummaryChain.translate_chain", "kind": "variable", "doc": "<p>Chain to use to translate summary result.</p>\n", "annotation": ": langchain.chains.llm.LLMChain"}, {"fullname": "codedog.chains.TranslatePRSummaryChain.from_llm", "modulename": "codedog.chains", "qualname": "TranslatePRSummaryChain.from_llm", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">language</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">code_summary_llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">pr_summary_llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">translate_llm</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">language_model</span><span class=\"o\">.</span><span class=\"n\">BaseLanguageModel</span>,</span><span class=\"param\">\t<span class=\"n\">code_summary_prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;language&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;content&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Act as a Code Reviewer Assistant. I will give a code diff content.</span><span class=\"se\">\\n</span><span class=\"s2\">And I want you to briefly summarize the content of the diff to helper reviewers understand what happened in this file</span><span class=\"se\">\\n</span><span class=\"s2\">faster and more convienently.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Your summary must be totaly objective and contains no opinions or suggestions.</span><span class=\"se\">\\n</span><span class=\"s2\">For example: ```This diff contains change in functions `create_database`,`delete_database`,</span><span class=\"se\">\\n</span><span class=\"s2\">it add a parameter `force` to these functions.</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Here&#39;s the diff of file </span><span class=\"si\">{name}</span><span class=\"s2\">:</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"si\">{language}</span><span class=\"se\">\\n</span><span class=\"si\">{content}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">pr_summary_prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;metadata&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;change_files&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;code_summaries&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;format_instructions&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;The output should be formatted as a JSON instance that conforms to the JSON schema below.</span><span class=\"se\">\\n\\n</span><span class=\"s1\">As an example, for the schema {&quot;properties&quot;: {&quot;foo&quot;: {&quot;title&quot;: &quot;Foo&quot;, &quot;description&quot;: &quot;a list of strings&quot;, &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: {&quot;type&quot;: &quot;string&quot;}}}, &quot;required&quot;: [&quot;foo&quot;]}}</span><span class=\"se\">\\n</span><span class=\"s1\">the object {&quot;foo&quot;: [&quot;bar&quot;, &quot;baz&quot;]} is a well-formatted instance of the schema. The object {&quot;properties&quot;: {&quot;foo&quot;: [&quot;bar&quot;, &quot;baz&quot;]}} is not well-formatted.</span><span class=\"se\">\\n\\n</span><span class=\"s1\">Here is the output schema:</span><span class=\"se\">\\n</span><span class=\"s1\">```</span><span class=\"se\">\\n</span><span class=\"s1\">{&quot;properties&quot;: {&quot;overview&quot;: {&quot;title&quot;: &quot;Overview&quot;, &quot;default&quot;: &quot;&quot;, &quot;type&quot;: &quot;string&quot;}, &quot;pr_type&quot;: {&quot;default&quot;: &quot;unknown&quot;, &quot;allOf&quot;: [{&quot;$ref&quot;: &quot;#/definitions/PRType&quot;}]}, &quot;major_files&quot;: {&quot;title&quot;: &quot;Major Files&quot;, &quot;type&quot;: &quot;array&quot;, &quot;items&quot;: {&quot;type&quot;: &quot;string&quot;}}}, &quot;definitions&quot;: {&quot;PRType&quot;: {&quot;title&quot;: &quot;PRType&quot;, &quot;description&quot;: &quot;Pull request type: feature, fix, refactor, perf, test, doc, ci, style, chore.&quot;, &quot;enum&quot;: [&quot;feature&quot;, &quot;fix&quot;, &quot;refactor&quot;, &quot;perf&quot;, &quot;test&quot;, &quot;doc&quot;, &quot;ci&quot;, &quot;style&quot;, &quot;chore&quot;, &quot;unknown&quot;], &quot;type&quot;: &quot;string&quot;}}}</span><span class=\"se\">\\n</span><span class=\"s1\">```&#39;</span><span class=\"p\">},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Act as a Code Reviewer Assistant. I want you to provide some information aboud below Pull Request(PR)</span><span class=\"se\">\\n</span><span class=\"s2\">to help reviewers understand it better and review it faster.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">The items I want you to provide are:</span><span class=\"se\">\\n</span><span class=\"s2\">- Describe the changes of this PR and it&#39;s objective.</span><span class=\"se\">\\n</span><span class=\"s2\">- Categorize this PR into one of the following types: Feature,Fix,Refactor,Perf,Doc,Test,Ci,Style,Housekeeping</span><span class=\"se\">\\n</span><span class=\"s2\">- If it&#39;s a feature/refactor PR. List the important change files which you believe</span><span class=\"se\">\\n</span><span class=\"s2\">    contains the major logical changes of this PR.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Below is informations about this PR I can provide to you:</span><span class=\"se\">\\n</span><span class=\"s2\">PR Metadata:</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{metadata}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">Change Files (with status):</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{change_files}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">Code change summaries (if this pr contains no code files, this will be empty):</span><span class=\"se\">\\n</span><span class=\"s2\">```text</span><span class=\"se\">\\n</span><span class=\"si\">{code_summaries}</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n\\n</span><span class=\"si\">{format_instructions}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">translate_prompt</span><span class=\"p\">:</span> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">prompt_template</span><span class=\"o\">.</span><span class=\"n\">BasePromptTemplate</span> <span class=\"o\">=</span> <span class=\"n\">PromptTemplate</span><span class=\"p\">(</span><span class=\"n\">input_variables</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;language&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;description&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;content&#39;</span><span class=\"p\">],</span> <span class=\"n\">output_parser</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">partial_variables</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">template</span><span class=\"o\">=</span><span class=\"s2\">&quot;Help me translate some content into </span><span class=\"si\">{language}</span><span class=\"s2\">.</span><span class=\"se\">\\n</span><span class=\"s2\">It belongs to a pull request review and is about </span><span class=\"si\">{description}</span><span class=\"s2\">.</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Content:</span><span class=\"se\">\\n</span><span class=\"s2\">---</span><span class=\"se\">\\n</span><span class=\"si\">{content}</span><span class=\"se\">\\n</span><span class=\"s2\">---</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Note that the content might be used in markdown or other formatted text,</span><span class=\"se\">\\n</span><span class=\"s2\">so don&#39;t change the paragraph layout of the content or add symbols.</span><span class=\"se\">\\n</span><span class=\"s2\">Your translation:&quot;</span><span class=\"p\">,</span> <span class=\"n\">template_format</span><span class=\"o\">=</span><span class=\"s1\">&#39;f-string&#39;</span><span class=\"p\">,</span> <span class=\"n\">validate_template</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">chains</span><span class=\"o\">.</span><span class=\"n\">pr_summary</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">PRSummaryChain</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.localization", "modulename": "codedog.localization", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.localization.Localization", "modulename": "codedog.localization", "qualname": "Localization", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "codedog.localization.Localization.__init__", "modulename": "codedog.localization", "qualname": "Localization.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s1\">&#39;en&#39;</span></span>)</span>"}, {"fullname": "codedog.localization.Localization.templates", "modulename": "codedog.localization", "qualname": "Localization.templates", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;en&#x27;: &lt;module &#x27;codedog.templates.template_en&#x27; from &#x27;/Users/arcadia/data/codedog/./codedog/templates/template_en.py&#x27;&gt;, &#x27;cn&#x27;: &lt;module &#x27;codedog.templates.template_cn&#x27; from &#x27;/Users/arcadia/data/codedog/./codedog/templates/template_cn.py&#x27;&gt;}"}, {"fullname": "codedog.localization.Localization.grimoires", "modulename": "codedog.localization", "qualname": "Localization.grimoires", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;en&#x27;: &lt;module &#x27;codedog.templates.grimoire_en&#x27; from &#x27;/Users/arcadia/data/codedog/./codedog/templates/grimoire_en.py&#x27;&gt;, &#x27;cn&#x27;: &lt;module &#x27;codedog.templates.grimoire_en&#x27; from &#x27;/Users/arcadia/data/codedog/./codedog/templates/grimoire_en.py&#x27;&gt;}"}, {"fullname": "codedog.localization.Localization.language", "modulename": "codedog.localization", "qualname": "Localization.language", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "codedog.localization.Localization.template", "modulename": "codedog.localization", "qualname": "Localization.template", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "codedog.localization.Localization.grimoire", "modulename": "codedog.localization", "qualname": "Localization.grimoire", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "codedog.models", "modulename": "codedog.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.models.Blob", "modulename": "codedog.models", "qualname": "Blob", "kind": "class", "doc": "<p>Git blob object.</p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.Blob.blob_id", "modulename": "codedog.models", "qualname": "Blob.blob_id", "kind": "variable", "doc": "<p>Blob id. Converted from sha.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Blob.sha", "modulename": "codedog.models", "qualname": "Blob.sha", "kind": "variable", "doc": "<p>Blob sha.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Blob.content", "modulename": "codedog.models", "qualname": "Blob.content", "kind": "variable", "doc": "<p>Blob content.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Blob.encoding", "modulename": "codedog.models", "qualname": "Blob.encoding", "kind": "variable", "doc": "<p>Blob content encoding.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Blob.size", "modulename": "codedog.models", "qualname": "Blob.size", "kind": "variable", "doc": "<p>Blob content size.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Blob.url", "modulename": "codedog.models", "qualname": "Blob.url", "kind": "variable", "doc": "<p>Blob url.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile", "modulename": "codedog.models", "qualname": "ChangeFile", "kind": "class", "doc": "<p>A changed file between two commit.</p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.ChangeFile.blob_id", "modulename": "codedog.models", "qualname": "ChangeFile.blob_id", "kind": "variable", "doc": "<p>Blob id. Converted from sha.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.ChangeFile.sha", "modulename": "codedog.models", "qualname": "ChangeFile.sha", "kind": "variable", "doc": "<p>Blob sha.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.full_name", "modulename": "codedog.models", "qualname": "ChangeFile.full_name", "kind": "variable", "doc": "<p>File name and path.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.source_full_name", "modulename": "codedog.models", "qualname": "ChangeFile.source_full_name", "kind": "variable", "doc": "<p>File name and path in source repository.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.status", "modulename": "codedog.models", "qualname": "ChangeFile.status", "kind": "variable", "doc": "<p>Change status. see more information in ChangeStatus.</p>\n", "annotation": ": codedog.models.change_file.ChangeStatus"}, {"fullname": "codedog.models.ChangeFile.pull_request_id", "modulename": "codedog.models", "qualname": "ChangeFile.pull_request_id", "kind": "variable", "doc": "<p>Id of pull request this change belongs to.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.ChangeFile.start_commit_id", "modulename": "codedog.models", "qualname": "ChangeFile.start_commit_id", "kind": "variable", "doc": "<p>Start commit id</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.ChangeFile.end_commit_id", "modulename": "codedog.models", "qualname": "ChangeFile.end_commit_id", "kind": "variable", "doc": "<p>End commit id</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.ChangeFile.name", "modulename": "codedog.models", "qualname": "ChangeFile.name", "kind": "variable", "doc": "<p>File name.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.suffix", "modulename": "codedog.models", "qualname": "ChangeFile.suffix", "kind": "variable", "doc": "<p>File suffix.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.diff_url", "modulename": "codedog.models", "qualname": "ChangeFile.diff_url", "kind": "variable", "doc": "<p>Url of this change file in pull request.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.blob_url", "modulename": "codedog.models", "qualname": "ChangeFile.blob_url", "kind": "variable", "doc": "<p>Url of this change file blob in end commit.</p>\n\n<p>If change file type is deleted, this will be none.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeFile.diff_content", "modulename": "codedog.models", "qualname": "ChangeFile.diff_content", "kind": "variable", "doc": "<p>The diff content of this file.</p>\n", "annotation": ": codedog.models.diff.DiffContent"}, {"fullname": "codedog.models.ChangeStatus", "modulename": "codedog.models", "qualname": "ChangeStatus", "kind": "class", "doc": "<p>Git file change mode. <a href=\"https://git-scm.com/docs/diff-format\">https://git-scm.com/docs/diff-format</a></p>\n", "bases": "builtins.str, enum.Enum"}, {"fullname": "codedog.models.ChangeStatus.addition", "modulename": "codedog.models", "qualname": "ChangeStatus.addition", "kind": "variable", "doc": "<p>Addition of a file</p>\n", "default_value": "&lt;ChangeStatus.addition: &#x27;A&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.copy", "modulename": "codedog.models", "qualname": "ChangeStatus.copy", "kind": "variable", "doc": "<p>Copy of a file into a new one</p>\n", "default_value": "&lt;ChangeStatus.copy: &#x27;C&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.deletion", "modulename": "codedog.models", "qualname": "ChangeStatus.deletion", "kind": "variable", "doc": "<p>Deletion of a file</p>\n", "default_value": "&lt;ChangeStatus.deletion: &#x27;D&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.modified", "modulename": "codedog.models", "qualname": "ChangeStatus.modified", "kind": "variable", "doc": "<p>Modification of the contents or mode of a file</p>\n", "default_value": "&lt;ChangeStatus.modified: &#x27;M&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.renaming", "modulename": "codedog.models", "qualname": "ChangeStatus.renaming", "kind": "variable", "doc": "<p>Renaming of a file</p>\n", "default_value": "&lt;ChangeStatus.renaming: &#x27;R&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.type_change", "modulename": "codedog.models", "qualname": "ChangeStatus.type_change", "kind": "variable", "doc": "<p>Change in the type of the file (regular file, symbolic link or submodule)</p>\n", "default_value": "&lt;ChangeStatus.type_change: &#x27;T&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.unmerged", "modulename": "codedog.models", "qualname": "ChangeStatus.unmerged", "kind": "variable", "doc": "<p>File is unmerged (you must complete the merge before it can be committed)</p>\n", "default_value": "&lt;ChangeStatus.unmerged: &#x27;U&#x27;&gt;"}, {"fullname": "codedog.models.ChangeStatus.unknown", "modulename": "codedog.models", "qualname": "ChangeStatus.unknown", "kind": "variable", "doc": "<p>Unknown change type (most probably a bug, please report it)</p>\n", "default_value": "&lt;ChangeStatus.unknown: &#x27;X&#x27;&gt;"}, {"fullname": "codedog.models.ChangeSummary", "modulename": "codedog.models", "qualname": "ChangeSummary", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.ChangeSummary.full_name", "modulename": "codedog.models", "qualname": "ChangeSummary.full_name", "kind": "variable", "doc": "<p>File full name.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.ChangeSummary.summary", "modulename": "codedog.models", "qualname": "ChangeSummary.summary", "kind": "variable", "doc": "<p>File change summarization.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.CodeReview", "modulename": "codedog.models", "qualname": "CodeReview", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.CodeReview.file", "modulename": "codedog.models", "qualname": "CodeReview.file", "kind": "variable", "doc": "<p></p>\n", "annotation": ": codedog.models.change_file.ChangeFile"}, {"fullname": "codedog.models.CodeReview.review", "modulename": "codedog.models", "qualname": "CodeReview.review", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Commit", "modulename": "codedog.models", "qualname": "Commit", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.Commit.commit_id", "modulename": "codedog.models", "qualname": "Commit.commit_id", "kind": "variable", "doc": "<p>Commit id converted from sha.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Commit.sha", "modulename": "codedog.models", "qualname": "Commit.sha", "kind": "variable", "doc": "<p>Commit sha.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Commit.url", "modulename": "codedog.models", "qualname": "Commit.url", "kind": "variable", "doc": "<p>Commit html url.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Commit.message", "modulename": "codedog.models", "qualname": "Commit.message", "kind": "variable", "doc": "<p>Commit message.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Commit.none_to_default", "modulename": "codedog.models", "qualname": "Commit.none_to_default", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ModelField</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.models.DiffContent", "modulename": "codedog.models", "qualname": "DiffContent", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.DiffContent.add_count", "modulename": "codedog.models", "qualname": "DiffContent.add_count", "kind": "variable", "doc": "<p>Added lines count.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffContent.remove_count", "modulename": "codedog.models", "qualname": "DiffContent.remove_count", "kind": "variable", "doc": "<p>Removed lines count.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffContent.content", "modulename": "codedog.models", "qualname": "DiffContent.content", "kind": "variable", "doc": "<p>Diff content.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.DiffContent.diff_segments", "modulename": "codedog.models", "qualname": "DiffContent.diff_segments", "kind": "variable", "doc": "<p>Diff segments.</p>\n", "annotation": ": list[codedog.models.diff.DiffSegment]"}, {"fullname": "codedog.models.DiffContent.patched_file", "modulename": "codedog.models", "qualname": "DiffContent.patched_file", "kind": "variable", "doc": "<p>Unidiff patched file object.</p>\n", "annotation": ": Optional[unidiff.patch.PatchedFile]"}, {"fullname": "codedog.models.DiffSegment", "modulename": "codedog.models", "qualname": "DiffSegment", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.DiffSegment.add_count", "modulename": "codedog.models", "qualname": "DiffSegment.add_count", "kind": "variable", "doc": "<p>Added lines count of this segment.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffSegment.remove_count", "modulename": "codedog.models", "qualname": "DiffSegment.remove_count", "kind": "variable", "doc": "<p>Removed lines count of this segment.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffSegment.content", "modulename": "codedog.models", "qualname": "DiffSegment.content", "kind": "variable", "doc": "<p>Diff content of this segment.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.DiffSegment.source_start_line_number", "modulename": "codedog.models", "qualname": "DiffSegment.source_start_line_number", "kind": "variable", "doc": "<p>Start line number of this segment in source file.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffSegment.source_length", "modulename": "codedog.models", "qualname": "DiffSegment.source_length", "kind": "variable", "doc": "<p>Length of this segment in source file.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffSegment.target_start_line_number", "modulename": "codedog.models", "qualname": "DiffSegment.target_start_line_number", "kind": "variable", "doc": "<p>Start line number of this segment in target file.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.DiffSegment.target_length", "modulename": "codedog.models", "qualname": "DiffSegment.target_length", "kind": "variable", "doc": "<p>Length of this segment in target file.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Issue", "modulename": "codedog.models", "qualname": "Issue", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.Issue.issue_id", "modulename": "codedog.models", "qualname": "Issue.issue_id", "kind": "variable", "doc": "<p>Issue id.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Issue.title", "modulename": "codedog.models", "qualname": "Issue.title", "kind": "variable", "doc": "<p>Issue title.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Issue.description", "modulename": "codedog.models", "qualname": "Issue.description", "kind": "variable", "doc": "<p>Issue description.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Issue.url", "modulename": "codedog.models", "qualname": "Issue.url", "kind": "variable", "doc": "<p>Issue url.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Issue.none_to_default", "modulename": "codedog.models", "qualname": "Issue.none_to_default", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ModelField</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.models.PRSummary", "modulename": "codedog.models", "qualname": "PRSummary", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.PRSummary.overview", "modulename": "codedog.models", "qualname": "PRSummary.overview", "kind": "variable", "doc": "<p>Pull request summarization.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.PRSummary.pr_type", "modulename": "codedog.models", "qualname": "PRSummary.pr_type", "kind": "variable", "doc": "<p>Pull request type.</p>\n", "annotation": ": codedog.models.pr_summary.PRType"}, {"fullname": "codedog.models.PRSummary.major_files", "modulename": "codedog.models", "qualname": "PRSummary.major_files", "kind": "variable", "doc": "<p>Pull request file with major logical changes. If pr_type is not feature, this will be empty.</p>\n", "annotation": ": list[str]"}, {"fullname": "codedog.models.PRType", "modulename": "codedog.models", "qualname": "PRType", "kind": "class", "doc": "<p>Pull request type: feature, fix, refactor, perf, test, doc, ci, style, chore.</p>\n", "bases": "builtins.str, enum.Enum"}, {"fullname": "codedog.models.PRType.feature", "modulename": "codedog.models", "qualname": "PRType.feature", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.feature: &#x27;feature&#x27;&gt;"}, {"fullname": "codedog.models.PRType.fix", "modulename": "codedog.models", "qualname": "PRType.fix", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.fix: &#x27;fix&#x27;&gt;"}, {"fullname": "codedog.models.PRType.refactor", "modulename": "codedog.models", "qualname": "PRType.refactor", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.refactor: &#x27;refactor&#x27;&gt;"}, {"fullname": "codedog.models.PRType.perf", "modulename": "codedog.models", "qualname": "PRType.perf", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.perf: &#x27;perf&#x27;&gt;"}, {"fullname": "codedog.models.PRType.test", "modulename": "codedog.models", "qualname": "PRType.test", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.test: &#x27;test&#x27;&gt;"}, {"fullname": "codedog.models.PRType.doc", "modulename": "codedog.models", "qualname": "PRType.doc", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.doc: &#x27;doc&#x27;&gt;"}, {"fullname": "codedog.models.PRType.ci", "modulename": "codedog.models", "qualname": "PRType.ci", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.ci: &#x27;ci&#x27;&gt;"}, {"fullname": "codedog.models.PRType.style", "modulename": "codedog.models", "qualname": "PRType.style", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.style: &#x27;style&#x27;&gt;"}, {"fullname": "codedog.models.PRType.chore", "modulename": "codedog.models", "qualname": "PRType.chore", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.chore: &#x27;chore&#x27;&gt;"}, {"fullname": "codedog.models.PRType.unknown", "modulename": "codedog.models", "qualname": "PRType.unknown", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;PRType.unknown: &#x27;unknown&#x27;&gt;"}, {"fullname": "codedog.models.PullRequest", "modulename": "codedog.models", "qualname": "PullRequest", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.PullRequest.pull_request_id", "modulename": "codedog.models", "qualname": "PullRequest.pull_request_id", "kind": "variable", "doc": "<p>Pull Request id (Global id. Not number/iid)</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.PullRequest.repository_id", "modulename": "codedog.models", "qualname": "PullRequest.repository_id", "kind": "variable", "doc": "<p>Repository id this pull request belongs to.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.PullRequest.pull_request_number", "modulename": "codedog.models", "qualname": "PullRequest.pull_request_number", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "codedog.models.PullRequest.title", "modulename": "codedog.models", "qualname": "PullRequest.title", "kind": "variable", "doc": "<p>Pull Request title.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.PullRequest.body", "modulename": "codedog.models", "qualname": "PullRequest.body", "kind": "variable", "doc": "<p>Pull Request description.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.PullRequest.url", "modulename": "codedog.models", "qualname": "PullRequest.url", "kind": "variable", "doc": "<p>Pull Request url.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.PullRequest.repository_name", "modulename": "codedog.models", "qualname": "PullRequest.repository_name", "kind": "variable", "doc": "<p>Repository name this pull request belongs to.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.PullRequest.related_issues", "modulename": "codedog.models", "qualname": "PullRequest.related_issues", "kind": "variable", "doc": "<p>git PR related issues</p>\n", "annotation": ": list[codedog.models.issue.Issue]"}, {"fullname": "codedog.models.PullRequest.change_files", "modulename": "codedog.models", "qualname": "PullRequest.change_files", "kind": "variable", "doc": "<p>git PR changed files</p>\n", "annotation": ": list[codedog.models.change_file.ChangeFile]"}, {"fullname": "codedog.models.PullRequest.repository", "modulename": "codedog.models", "qualname": "PullRequest.repository", "kind": "variable", "doc": "<p>git PR target repository</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.models.PullRequest.source_repository", "modulename": "codedog.models", "qualname": "PullRequest.source_repository", "kind": "variable", "doc": "<p>git PR source repository</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.models.PullRequest.none_to_default", "modulename": "codedog.models", "qualname": "PullRequest.none_to_default", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ModelField</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.models.Repository", "modulename": "codedog.models", "qualname": "Repository", "kind": "class", "doc": "<p></p>\n", "bases": "pydantic.main.BaseModel"}, {"fullname": "codedog.models.Repository.repository_id", "modulename": "codedog.models", "qualname": "Repository.repository_id", "kind": "variable", "doc": "<p>Repository id.</p>\n", "annotation": ": int"}, {"fullname": "codedog.models.Repository.repository_name", "modulename": "codedog.models", "qualname": "Repository.repository_name", "kind": "variable", "doc": "<p>Repository name this pull request belongs to.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Repository.repository_full_name", "modulename": "codedog.models", "qualname": "Repository.repository_full_name", "kind": "variable", "doc": "<p>Repository full name this pull request belongs to.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Repository.repository_url", "modulename": "codedog.models", "qualname": "Repository.repository_url", "kind": "variable", "doc": "<p>Repository url this pull request belongs to.</p>\n", "annotation": ": str"}, {"fullname": "codedog.models.Repository.none_to_default", "modulename": "codedog.models", "qualname": "Repository.none_to_default", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">field</span><span class=\"p\">:</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"o\">.</span><span class=\"n\">ModelField</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors", "modulename": "codedog.processors", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.processors.PullRequestProcessor", "modulename": "codedog.processors", "qualname": "PullRequestProcessor", "kind": "class", "doc": "<p></p>\n", "bases": "codedog.localization.Localization"}, {"fullname": "codedog.processors.PullRequestProcessor.is_code_file", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.is_code_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">change_file</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_file</span><span class=\"o\">.</span><span class=\"n\">ChangeFile</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.get_diff_code_files", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.get_diff_code_files", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pr</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"o\">.</span><span class=\"n\">PullRequest</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_file</span><span class=\"o\">.</span><span class=\"n\">ChangeFile</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.gen_material_change_files", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.gen_material_change_files", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">change_files</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_file</span><span class=\"o\">.</span><span class=\"n\">ChangeFile</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.gen_material_code_summaries", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.gen_material_code_summaries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">code_summaries</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_summary</span><span class=\"o\">.</span><span class=\"n\">ChangeSummary</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.gen_material_pr_metadata", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.gen_material_pr_metadata", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pr</span><span class=\"p\">:</span> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">pull_request</span><span class=\"o\">.</span><span class=\"n\">PullRequest</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.build_change_summaries", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.build_change_summaries", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">summaries_input</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">summaries_output</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">change_summary</span><span class=\"o\">.</span><span class=\"n\">ChangeSummary</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.processors.PullRequestProcessor.status_template_functions", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.status_template_functions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[codedog.models.change_file.ChangeStatus, typing.Callable]"}, {"fullname": "codedog.processors.PullRequestProcessor.build", "modulename": "codedog.processors", "qualname": "PullRequestProcessor.build", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">processors</span><span class=\"o\">.</span><span class=\"n\">pull_request_processor</span><span class=\"o\">.</span><span class=\"n\">PullRequestProcessor</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.retrievers", "modulename": "codedog.retrievers", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.retrievers.GithubRetriever", "modulename": "codedog.retrievers", "qualname": "GithubRetriever", "kind": "class", "doc": "<p>Github retriever.</p>\n", "bases": "codedog.retrievers.base.Retriever"}, {"fullname": "codedog.retrievers.GithubRetriever.__init__", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.__init__", "kind": "function", "doc": "<p>Connect to github remote server and retrieve pull request data.</p>\n\n<p>Args:\n    client (github.Github): github client from pyGithub\n    repository_name_or_id (str | int): repository name or id\n    pull_request_number (int): pull request number (not global id)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">MainClass</span><span class=\"o\">.</span><span class=\"n\">Github</span>,</span><span class=\"param\">\t<span class=\"n\">repository_name_or_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">pull_request_number</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "codedog.retrievers.GithubRetriever.GITHUB_STATUS_MAPPING", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.GITHUB_STATUS_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;added&#x27;: &#x27;A&#x27;, &#x27;copied&#x27;: &#x27;C&#x27;, &#x27;removed&#x27;: &#x27;D&#x27;, &#x27;modified&#x27;: &#x27;M&#x27;, &#x27;renamed&#x27;: &#x27;R&#x27;, &#x27;type_change&#x27;: &#x27;T&#x27;}"}, {"fullname": "codedog.retrievers.GithubRetriever.ISSUE_PATTERN", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.ISSUE_PATTERN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#\\\\d+&#x27;"}, {"fullname": "codedog.retrievers.GithubRetriever.retriever_type", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.retriever_type", "kind": "variable", "doc": "<p>Return the retriever type.</p>\n", "annotation": ": str"}, {"fullname": "codedog.retrievers.GithubRetriever.repository", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.repository", "kind": "variable", "doc": "<p>Return the pull request target repository object.</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.retrievers.GithubRetriever.pull_request", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.pull_request", "kind": "variable", "doc": "<p>Return the pull request object.</p>\n", "annotation": ": codedog.models.pull_request.PullRequest"}, {"fullname": "codedog.retrievers.GithubRetriever.source_repository", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.source_repository", "kind": "variable", "doc": "<p>Return the pull request source repository object.</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.retrievers.GithubRetriever.changed_files", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.changed_files", "kind": "variable", "doc": "<p>Return the changed file list between end commit and start commit.</p>\n", "annotation": ": list[codedog.models.change_file.ChangeFile]"}, {"fullname": "codedog.retrievers.GithubRetriever.get_blob", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.get_blob", "kind": "function", "doc": "<p>Get blob by id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blob_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.retrievers.GithubRetriever.get_commit", "modulename": "codedog.retrievers", "qualname": "GithubRetriever.get_commit", "kind": "function", "doc": "<p>Get commit by id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">commit_sha</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"o\">.</span><span class=\"n\">Commit</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.retrievers.GitlabRetriever", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever", "kind": "class", "doc": "<p>Base class for git repository pull request retrievers.</p>\n\n<p>Retrievers are responsible for retrieving pr related commits, branchs, issues and code data from\nGithub, Gitlab, Bitbucket etc. It defines the interface codedog uses to retrieve data from\nfrom repository, wrapped the different client api of platforms.</p>\n", "bases": "codedog.retrievers.base.Retriever"}, {"fullname": "codedog.retrievers.GitlabRetriever.__init__", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.__init__", "kind": "function", "doc": "<p>Connect to gitlab remote server and retrieve merge request data.</p>\n\n<p>Args:\n    client (gitlab.Gitlab): gitlab client from python-gitlab\n    project_name_or_id (str | int): project name (with full namespace) or id\n    merge_request_iid (int): merge request iid (not global id)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">gitlab</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Gitlab</span>,</span><span class=\"param\">\t<span class=\"n\">project_name_or_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">merge_request_iid</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, {"fullname": "codedog.retrievers.GitlabRetriever.ISSUE_PATTERN", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.ISSUE_PATTERN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;#\\\\d+&#x27;"}, {"fullname": "codedog.retrievers.GitlabRetriever.LIST_DIFF_LIMIT", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.LIST_DIFF_LIMIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "200"}, {"fullname": "codedog.retrievers.GitlabRetriever.retriever_type", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.retriever_type", "kind": "variable", "doc": "<p>Return the retriever type.</p>\n", "annotation": ": str"}, {"fullname": "codedog.retrievers.GitlabRetriever.repository", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.repository", "kind": "variable", "doc": "<p>Return the pull request target repository object.</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.retrievers.GitlabRetriever.pull_request", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.pull_request", "kind": "variable", "doc": "<p>Return the pull request object.</p>\n", "annotation": ": codedog.models.pull_request.PullRequest"}, {"fullname": "codedog.retrievers.GitlabRetriever.source_repository", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.source_repository", "kind": "variable", "doc": "<p>Return the pull request source repository object.</p>\n", "annotation": ": codedog.models.repository.Repository"}, {"fullname": "codedog.retrievers.GitlabRetriever.changed_files", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.changed_files", "kind": "variable", "doc": "<p>Return the changed file list between end commit and start commit.</p>\n", "annotation": ": list[codedog.models.change_file.ChangeFile]"}, {"fullname": "codedog.retrievers.GitlabRetriever.get_blob", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.get_blob", "kind": "function", "doc": "<p>Get blob by id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">blob_sha</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">blob</span><span class=\"o\">.</span><span class=\"n\">Blob</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.retrievers.GitlabRetriever.get_commit", "modulename": "codedog.retrievers", "qualname": "GitlabRetriever.get_commit", "kind": "function", "doc": "<p>Get commit by id.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">commit_sha</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">codedog</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"o\">.</span><span class=\"n\">Commit</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.templates", "modulename": "codedog.templates", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.templates.grimoire_cn", "modulename": "codedog.templates.grimoire_cn", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.templates.grimoire_en", "modulename": "codedog.templates.grimoire_en", "kind": "module", "doc": "<p>Grimoire of CodeDog. English version.</p>\n"}, {"fullname": "codedog.templates.grimoire_en.PR_FILES_SUMMARY_HEADER", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_FILES_SUMMARY_HEADER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n**Main changes**\\n{important_changes}\\n**Secondary changes**\\n{unimportant_changes}\\n&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_FILE_SUMMARY_HEADER", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_FILE_SUMMARY_HEADER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;{path}: {summary}&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_CHANGE_REVIEW_SUMMARY", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_CHANGE_REVIEW_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;summary of diff&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_CHANGE_REVIEW_MAIN_CHANGE", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_CHANGE_REVIEW_MAIN_CHANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;this diff contains the major part of logical changes in this change list&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_CHANGE_REVIEW_TEMPLATE", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_CHANGE_REVIEW_TEMPLATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nAct as a code reviewer, I will be your assistant, provide you a file diff in a change list,\\nplease review the code change according to the following requirements:\\n\\n1. Determine whether the file is a code file containing major logic changes. Generally speaking,\\nsuch files often have some function logic changes\\n\\n2. Briefly summarize the content of the diff change in Chinese, no more than 100 words,\\ndo not include the results of the first step, just summarize the content of the change.\\n\\n{format_instructions}\\n\\nPlease act as a code reviewer, review the file {name} change. I want you to give:\\n1. Determine whether the file contains major logic changes. Generally speaking,\\n2. A brief summary of the diff change, no more than 100 words. Do not include the results of the first step\\n\\nreview the code according to the instructions:\\n\\n{format_instructions}\\n\\nhere is the diff content:\\n```\\n{text}\\n```&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_CHANGE_REVIEW_FALLBACK_TEMPLATE", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_CHANGE_REVIEW_FALLBACK_TEMPLATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nPlease act as a code reviewer, review the file {name} change. I want you to give:\\n\\ngive a brief summary of the diff change, no more than 100 words.\\n\\nhere is the diff content:\\n```\\n{text}\\n```&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_SUMMARIZE_TEMPLATE", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_SUMMARIZE_TEMPLATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nSummarize a git pull request by the given information:\\n\\npull request information (for better understand the context, not part of the pull request):\\n```\\n{pull_request_info}\\n```\\nrelated issue information (for better understand the context, not part of the pull request):\\n```\\n{issue_info}\\n```\\n\\nchanges summary:\\n```\\n{summary}\\n```\\n\\nPlease note that I want you to summarize the entire pull request, not specific files.\\nThe summary should be no more than 200 words:&#x27;"}, {"fullname": "codedog.templates.grimoire_en.PR_SIMPLE_FEEDBACK_TEMPLATE", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_SIMPLE_FEEDBACK_TEMPLATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nAct as a code reviewer, I will be your assistant, provide you a file diff from a change list,\\nplease review the code change according to the following requirements:\\n\\n1. Don\\&#x27;t give subjective comments on the code quality, such as &quot;this code is bad&quot;, &quot;this code is good&quot;, etc.\\n2. Don\\&#x27;t give general suggestions that are not specific to the code, such as &quot;this code needs to be refactored&quot;, &quot;this code needs to be optimized&quot;, etc.\\n\\nIf you can\\&#x27;t judge whether the code is good or bad, please reply &quot;ok&quot; and don\\&#x27;t reply any other content except &quot;ok&quot;.\\n\\nHere\\&#x27;s the code:\\n{text}\\n&#x27;"}, {"fullname": "codedog.templates.grimoire_en.CODE_SUMMARY", "modulename": "codedog.templates.grimoire_en", "qualname": "CODE_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;Act as a Code Reviewer Assistant. I will give a code diff content.\\nAnd I want you to briefly summarize the content of the diff to helper reviewers understand what happened in this file\\nfaster and more convienently.\\n\\nYour summary must be totaly objective and contains no opinions or suggestions.\\nFor example: ```This diff contains change in functions `create_database`,`delete_database`,\\nit add a parameter `force` to these functions.\\n```\\n\\nHere&#x27;s the diff of file {name}:\\n```{language}\\n{content}\\n```\\n&quot;"}, {"fullname": "codedog.templates.grimoire_en.PR_SUMMARY", "modulename": "codedog.templates.grimoire_en", "qualname": "PR_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;Act as a Code Reviewer Assistant. I want you to provide some information aboud below Pull Request(PR)\\nto help reviewers understand it better and review it faster.\\n\\nThe items I want you to provide are:\\n- Describe the changes of this PR and it&#x27;s objective.\\n- Categorize this PR into one of the following types: Feature,Fix,Refactor,Perf,Doc,Test,Ci,Style,Housekeeping\\n- If it&#x27;s a feature/refactor PR. List the important change files which you believe\\n    contains the major logical changes of this PR.\\n\\nBelow is informations about this PR I can provide to you:\\nPR Metadata:\\n```text\\n{metadata}\\n```\\nChange Files (with status):\\n```text\\n{change_files}\\n```\\nCode change summaries (if this pr contains no code files, this will be empty):\\n```text\\n{code_summaries}\\n```\\n\\n{format_instructions}\\n&quot;"}, {"fullname": "codedog.templates.grimoire_en.CODE_SUGGESTION", "modulename": "codedog.templates.grimoire_en", "qualname": "CODE_SUGGESTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;Act as a Code Reviewer Assistant. I will give a code diff content.\\nAnd I want you to check whether the code change is correct and give some suggestions to the author.\\n\\nHere&#x27;s the code diff from file {name}:\\n```{language}\\n{content}\\n```\\n&quot;"}, {"fullname": "codedog.templates.grimoire_en.TRANSLATE_PR_REVIEW", "modulename": "codedog.templates.grimoire_en", "qualname": "TRANSLATE_PR_REVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&quot;Help me translate some content into {language}.\\nIt belongs to a pull request review and is about {description}.\\n\\nContent:\\n---\\n{content}\\n---\\n\\nNote that the content might be used in markdown or other formatted text,\\nso don&#x27;t change the paragraph layout of the content or add symbols.\\nYour translation:&quot;"}, {"fullname": "codedog.templates.template_cn", "modulename": "codedog.templates.template_cn", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.templates.template_cn.REPORT_PR_REVIEW", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_PR_REVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;# [{repo_name} #{pr_number} - {pr_name}]({url}) Pull Request \u5206\u6790\u62a5\u544a\\n\\n*powered by GPT and {project} {version}*\\n\\n{telemetry}\\n\\n\\n{pr_report}\\n\\n\\n{cr_report}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_TELEMETRY", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_TELEMETRY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;## \u6267\u884c\u4fe1\u606f\\n- \u5f00\u59cb\u65f6\u95f4: {start_time}\\n- \u6267\u884c\u8017\u65f6: {time_usage:.2f}s\\n- Openai Token \u4f7f\u7528\u6570\u91cf: {tokens}\\n- Openai Api \u8c03\u7528\u6210\u672c: ${cost:.4f}\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_PR_SUMMARY", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_PR_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n## PR \u6982\u8981\\n\\n### PR \u603b\u7ed3\\n{overview}\\n\\n### \u53d8\u52a8\u6587\u4ef6\u8bf4\u660e\\n{file_changes}\\n\\n&lt;details&gt;\\n&lt;summary&gt;&lt;h3&gt;\u6539\u52a8\u5217\u8868&lt;/h3&gt;&lt;/summary&gt;\\n\\n{change_overview}\\n\\n&lt;/details&gt;\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_PR_SUMMARY_OVERVIEW", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_PR_SUMMARY_OVERVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;{type_desc}\\n\\n{overview}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_PR_TYPE_DESC_MAPPING", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_PR_TYPE_DESC_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;feature&#x27;: &#x27;\u8be5 PR \u6dfb\u52a0\u4e86\u65b0\u7684\u529f\u80fd\u3001\u7279\u6027 :sparkles:&#x27;, &#x27;fix&#x27;: &#x27;\u8be5 PR \u4fee\u590d\u4e86\u4ee3\u7801\u4e2d\u7684\u95ee\u9898 :bug:&#x27;, &#x27;refactor&#x27;: &#x27;\u8be5 PR \u5bf9\u4ee3\u7801\u8fdb\u884c\u91cd\u6784 :hammer_and_wrench:&#x27;, &#x27;perf&#x27;: &#x27;\u8be5 PR \u5c1d\u8bd5\u8fdb\u884c\u6027\u80fd\u4f18\u5316 :rocket:&#x27;, &#x27;test&#x27;: &#x27;\u8be5 PR \u4e3b\u8981\u6dfb\u52a0\u4e86\u4e00\u4e9b\u6d4b\u8bd5 :white_check_mark:&#x27;, &#x27;doc&#x27;: &#x27;\u8be5 PR \u4e3b\u8981\u4e3a\u6587\u6863\u53d8\u52a8 :memo:&#x27;, &#x27;ci&#x27;: &#x27;\u8be5 PR \u4e3b\u8981\u4e3a CI/CD \u53d8\u52a8 :gear:&#x27;, &#x27;style&#x27;: &#x27;\u8be5 PR \u4e3b\u8981\u4e3a code style \u53d8\u52a8 :art:&#x27;, &#x27;chore&#x27;: &#x27;\u8be5 PR \u505a\u4e86\u4e00\u4e9b\u548c\u9879\u76ee\u672c\u8eab\u65e0\u5173\u7684\u4e8b\u52a1 :broom:&#x27;, &#x27;unknown&#x27;: &#x27;\u8be5 PR \u7684\u4e3b\u9898\u672a\u80fd\u88ab\u8bc6\u522b :dog: :question:&#x27;}"}, {"fullname": "codedog.templates.template_cn.REPORT_CHANGE_OVERVIEW", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_CHANGE_OVERVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;| **[{name}]({url} &quot;{full_name}&quot;)** | {content} |&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_FILE_CHANGES_MAJOR", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_FILE_CHANGES_MAJOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n| \u4e3b\u8981\u53d8\u52a8 | \u63cf\u8ff0 |\\n|---|---|\\n{major_changes}\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_FILE_CHANGES", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_FILE_CHANGES", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n| \u5176\u4ed6\u53d8\u52a8 | \u63cf\u8ff0 |\\n|---|---|\\n{changes}\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_CODE_REVIEW", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_CODE_REVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;## \u4ee3\u7801\u5ba1\u67e5 (\u9884\u89c8\u7248)\\n\\n*\u8be5\u529f\u80fd\u4ecd\u5728\u6d4b\u8bd5\u4e2d\uff0c\u7531 AI \u63d0\u4f9b\u7684\u5efa\u8bae\u53ef\u80fd\u4e0d\u6b63\u786e\u3002*\\n\\n{feedback}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_CODE_REVIEW_SEGMENT", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_CODE_REVIEW_SEGMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;**[{full_name}]({url})**\\n\\n{review}\\n&#x27;"}, {"fullname": "codedog.templates.template_cn.REPORT_CODE_REVIEW_NO_FEEDBACK", "modulename": "codedog.templates.template_cn", "qualname": "REPORT_CODE_REVIEW_NO_FEEDBACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\u5bf9\u8be5 PR \u6ca1\u6709\u4ee3\u7801\u5ba1\u67e5\u5efa\u8bae&#x27;"}, {"fullname": "codedog.templates.template_cn.MATERIAL_STATUS_HEADER_MAPPING", "modulename": "codedog.templates.template_cn", "qualname": "MATERIAL_STATUS_HEADER_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;A&#x27;: &#x27;Added files:&#x27;, &#x27;C&#x27;: &#x27;Copied files:&#x27;, &#x27;D&#x27;: &#x27;Deleted files:&#x27;, &#x27;M&#x27;: &#x27;Modified files:&#x27;, &#x27;R&#x27;: &#x27;Renamed files:&#x27;, &#x27;T&#x27;: &#x27;Type changed files:&#x27;, &#x27;U&#x27;: &#x27;Other files:&#x27;, &#x27;X&#x27;: &#x27;Unknown(X) files:&#x27;}"}, {"fullname": "codedog.templates.template_cn.MATERIAL_CODE_SUMMARY", "modulename": "codedog.templates.template_cn", "qualname": "MATERIAL_CODE_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;File `{name}` Change: {summary}&#x27;"}, {"fullname": "codedog.templates.template_cn.MATERIAL_PR_METADATA", "modulename": "codedog.templates.template_cn", "qualname": "MATERIAL_PR_METADATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Pull Request Metadata:\\n---\\n1. Title: {pr_title}\\n\\n2. Body:\\n```text\\n{pr_body}\\n```\\n\\n3. Issues:\\n```text\\n{issues}\\n```\\n---\\n&#x27;"}, {"fullname": "codedog.templates.template_en", "modulename": "codedog.templates.template_en", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.templates.template_en.REPORT_PR_REVIEW", "modulename": "codedog.templates.template_en", "qualname": "REPORT_PR_REVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;# [{repo_name} #{pr_number} - {pr_name}]({url}) Pull Request Report\\n\\n*powered by GPT and {project} {version}*\\n\\n{telemetry}\\n\\n\\n{pr_report}\\n\\n\\n{cr_report}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_TELEMETRY", "modulename": "codedog.templates.template_en", "qualname": "REPORT_TELEMETRY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;## Execution\\n- Start at: {start_time}\\n- Time usage: {time_usage:.2f}s\\n- Openai api tokens: {tokens}\\n- Openai api costs: ${cost:.4f}\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_PR_SUMMARY", "modulename": "codedog.templates.template_en", "qualname": "REPORT_PR_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n## PR Summary\\n\\n### PR Overview\\n{overview}\\n\\n### Change Details\\n{file_changes}\\n\\n&lt;details&gt;\\n&lt;summary&gt;&lt;h3&gt;Change File List&lt;/h3&gt;&lt;/summary&gt;\\n\\n{change_overview}\\n\\n&lt;/details&gt;\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_PR_SUMMARY_OVERVIEW", "modulename": "codedog.templates.template_en", "qualname": "REPORT_PR_SUMMARY_OVERVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;{type_desc}\\n\\n{overview}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_PR_TYPE_DESC_MAPPING", "modulename": "codedog.templates.template_en", "qualname": "REPORT_PR_TYPE_DESC_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;feature&#x27;: &#x27;This PR is a new feature :sparkles:&#x27;, &#x27;fix&#x27;: &#x27;This PR is fixing bug :bug:&#x27;, &#x27;refactor&#x27;: &#x27;This PR is a refactor :hammer_and_wrench:&#x27;, &#x27;perf&#x27;: &#x27;This PR try to improve performance :rocket:&#x27;, &#x27;test&#x27;: &#x27;This PR try to improve tests :white_check_mark:&#x27;, &#x27;doc&#x27;: &#x27;This PR try to improve documentation :memo:&#x27;, &#x27;ci&#x27;: &#x27;This PR changes CI/CD :gear:&#x27;, &#x27;style&#x27;: &#x27;This PR improves code style :art:&#x27;, &#x27;chore&#x27;: &#x27;This PR is a chore :broom:&#x27;, &#x27;unknown&#x27;: &#x27;This PR type is not recognized by codedog :dog: :question:&#x27;}"}, {"fullname": "codedog.templates.template_en.REPORT_CHANGE_OVERVIEW", "modulename": "codedog.templates.template_en", "qualname": "REPORT_CHANGE_OVERVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;| **[{name}]({url} &quot;{full_name}&quot;)** | {content} |&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_FILE_CHANGES_MAJOR", "modulename": "codedog.templates.template_en", "qualname": "REPORT_FILE_CHANGES_MAJOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n| Major Changes | Description |\\n|---|---|\\n{major_changes}\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_FILE_CHANGES", "modulename": "codedog.templates.template_en", "qualname": "REPORT_FILE_CHANGES", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\n| Changes | Description |\\n|---|---|\\n{changes}\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_CODE_REVIEW", "modulename": "codedog.templates.template_en", "qualname": "REPORT_CODE_REVIEW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;## Code Review (preview)\\n\\n*This feature is still under test. Suggestions are given by AI and might be incorrect.*\\n\\n{feedback}\\n\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_CODE_REVIEW_SEGMENT", "modulename": "codedog.templates.template_en", "qualname": "REPORT_CODE_REVIEW_SEGMENT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;**[{full_name}]({url})**\\n\\n{review}\\n&#x27;"}, {"fullname": "codedog.templates.template_en.REPORT_CODE_REVIEW_NO_FEEDBACK", "modulename": "codedog.templates.template_en", "qualname": "REPORT_CODE_REVIEW_NO_FEEDBACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;No suggestions for this PR.&#x27;"}, {"fullname": "codedog.templates.template_en.MATERIAL_STATUS_HEADER_MAPPING", "modulename": "codedog.templates.template_en", "qualname": "MATERIAL_STATUS_HEADER_MAPPING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;A&#x27;: &#x27;Added files:&#x27;, &#x27;C&#x27;: &#x27;Copied files:&#x27;, &#x27;D&#x27;: &#x27;Deleted files:&#x27;, &#x27;M&#x27;: &#x27;Modified files:&#x27;, &#x27;R&#x27;: &#x27;Renamed files:&#x27;, &#x27;T&#x27;: &#x27;Type changed files:&#x27;, &#x27;U&#x27;: &#x27;Other files:&#x27;, &#x27;X&#x27;: &#x27;Unknown(X) files:&#x27;}"}, {"fullname": "codedog.templates.template_en.MATERIAL_CODE_SUMMARY", "modulename": "codedog.templates.template_en", "qualname": "MATERIAL_CODE_SUMMARY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;File `{name}` Change: {summary}&#x27;"}, {"fullname": "codedog.templates.template_en.MATERIAL_PR_METADATA", "modulename": "codedog.templates.template_en", "qualname": "MATERIAL_PR_METADATA", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;Pull Request Metadata:\\n---\\n1. Title: {pr_title}\\n\\n2. Body:\\n```text\\n{pr_body}\\n```\\n\\n3. Issues:\\n```text\\n{issues}\\n```\\n---\\n&#x27;"}, {"fullname": "codedog.utils", "modulename": "codedog.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.utils.diff_utils", "modulename": "codedog.utils.diff_utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.utils.diff_utils.parse_diff", "modulename": "codedog.utils.diff_utils", "qualname": "parse_diff", "kind": "function", "doc": "<p>parse file diff content to unidiff.PatchSet</p>\n\n<p>diff content has a format of:\n--- a/aaa.txt\n+++ b/bbb.txt\n(diff contents)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">diff</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">unidiff</span><span class=\"o\">.</span><span class=\"n\">patch</span><span class=\"o\">.</span><span class=\"n\">PatchSet</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.utils.diff_utils.parse_patch_file", "modulename": "codedog.utils.diff_utils", "qualname": "parse_patch_file", "kind": "function", "doc": "<p>parse file patch content to unidiff.PatchSet</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">patch</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">prev_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.utils.langchain_utils", "modulename": "codedog.utils.langchain_utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.utils.langchain_utils.load_gpt_llm", "modulename": "codedog.utils.langchain_utils", "qualname": "load_gpt_llm", "kind": "function", "doc": "<p>Load GPT 3.5 Model</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">langchain</span><span class=\"o\">.</span><span class=\"n\">chat_models</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">BaseChatModel</span>:</span></span>", "funcdef": "def"}, {"fullname": "codedog.utils.langchain_utils.load_gpt4_llm", "modulename": "codedog.utils.langchain_utils", "qualname": "load_gpt4_llm", "kind": "function", "doc": "<p>Load GPT 4 Model. Make sure your key have access to GPT 4 API. call this function won't check it.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "codedog.version", "modulename": "codedog.version", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "codedog.version.PROJECT", "modulename": "codedog.version", "qualname": "PROJECT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;codedog&#x27;"}, {"fullname": "codedog.version.VERSION", "modulename": "codedog.version", "qualname": "VERSION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;0.8.0&#x27;"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();